# Generated by Django 4.2.3 on 2023-09-06 09:16

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CombineDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Date of the Task',
            },
        ),
        migrations.CreateModel(
            name='Date',
            fields=[
                ('date_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('data', models.PositiveSmallIntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Month',
            fields=[
                ('month_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('data', models.CharField(max_length=9, unique=True)),
            ],
            options={
                'ordering': ['month_id'],
            },
        ),
        migrations.CreateModel(
            name='Year',
            fields=[
                ('year_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('data', models.PositiveSmallIntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task', models.CharField(max_length=255)),
                ('slug', models.SlugField(null=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('combine_date', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tasks.combinedate')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='task_set', related_query_name='tasks', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='combinedate',
            name='date',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tasks.date'),
        ),
        migrations.AddField(
            model_name='combinedate',
            name='month',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tasks.month'),
        ),
        migrations.AddField(
            model_name='combinedate',
            name='year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tasks.year'),
        ),
        migrations.AddConstraint(
            model_name='task',
            constraint=models.UniqueConstraint(fields=('task', 'combine_date'), name='unique_task_date', violation_error_message='Task already exist for this date'),
        ),
        migrations.AddConstraint(
            model_name='task',
            constraint=models.UniqueConstraint(fields=('slug',), name='unique_hash_id', violation_error_message='Hash identifier already exists'),
        ),
        migrations.AddConstraint(
            model_name='combinedate',
            constraint=models.UniqueConstraint(fields=('date', 'month', 'year'), name='unique_dates', violation_error_message='Combination of Date already exist'),
        ),
    ]
